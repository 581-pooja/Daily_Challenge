/* Evaluate Reverse Polish Notation
Input: tokens = ["2","1","+","3","*"]
Output: 9
Explanation: ((2 + 1) * 3) = 9
*/
class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        stack <int> s;

        for(string x : tokens){
            if(x == "+"){
                int a = s.top(); // 2
                s.pop();
                int b = s.top(); // 3
                s.pop();
                // a + b = 2 + 3 = 5
                s.push(a+b);
            }
            else if(x == "-"){
                int a = s.top(); // 2
                s.pop();
                int b = s.top(); // 3
                s.pop();
                // b - a = 3 - 2 = 1
                s.push(b - a);
            }
            else if(x == "*"){
                int a = s.top(); // 2
                s.pop();
                int b = s.top(); // 3
                s.pop();
                // a * b = 2 * 3 = 6
                s.push(a*b);
            }
            else if(x == "/"){
                int a = s.top(); // 2
                s.pop();
                int b = s.top(); // 3
                s.pop();
                // b / a = 6/2 
                s.push(b/a);
            }
            else s.push(stoi(x));
        }
        return s.top();
    }
};

/*
Complexity
Time complexity:
O(N) (For loop)
Space complexity:
O(N) (Stack space)
*/
