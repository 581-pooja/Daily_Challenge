// User function Template for C++

/*struct Node
{
    int data;
    struct Node *left, *right;
};*/

class Solution {
    Node* first;
    Node* prev;
    Node* middle;
    Node* last;
  public:
    void inorder(Node* root){
        if(root == NULL) return;
        inorder(root->left);
        if(prev != NULL && (root->data < prev->data)){
            if(first == NULL){
                first = prev;
                middle = root;
            }
            else{
                last = root;
            }
        }
        prev = root;
        inorder(root->right);
    }
    struct Node *correctBST(struct Node *root) {
        first = middle = last = NULL;
        prev = new Node(INT_MIN);
        inorder(root);
        if(first && last) {
            swap(first->data, last->data);
        }
        else if(first && middle){
            swap(first->data, middle->data);
        }
        return root;
    }
};

/*Question:
Input:
         11
       /    \
      3      17
       \    /
        4  10
Output: 1 
Explanation: 
By swapping nodes 11 and 10, the BST can be fixed.

Input:
       10
     /    \
    5      8
   / \
  2   20
Output: 1
By swapping nodes 8 and 20, the BST can be fixed.
*/
